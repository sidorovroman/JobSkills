<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:s="http://www.springframework.org/schema/security"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans  http://www.springframework.org/schema/beans/spring-beans.xsd
          http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd">

  <s:global-method-security secured-annotations="enabled"/>
  <bean id="sessionAuthenticationStrategy"
        class="org.springframework.security.web.authentication.session.SessionFixationProtectionStrategy">
    <property name="migrateSessionAttributes" value="false"/>
    <property name="alwaysCreateSession" value="true"/>
  </bean>

  <bean id="httpAccessDecisionManager"
        class="org.springframework.security.access.vote.AffirmativeBased">
    <constructor-arg>
      <list>
        <bean class="org.springframework.security.access.vote.AuthenticatedVoter"/>
      </list>
    </constructor-arg>
  </bean>

  <s:http auto-config='true' use-expressions="true">
    <s:intercept-url pattern="/user/*" access="isFullyAuthenticated()"/>
    <s:intercept-url pattern="/" access="permitAll()"/>
    <s:form-login login-page="/"
                  username-parameter="username"
                  password-parameter="password"
                  authentication-failure-url="/?login_error=1"
                  default-target-url="/"/>
    <s:http-basic/>
    <s:logout logout-url="/users/logout" logout-success-url="/"/>
    <s:remember-me/>
  </s:http>

  <bean id="saltSource" class="org.springframework.security.authentication.dao.ReflectionSaltSource"
        p:userPropertyToUse="username"/>

  <bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.Md5PasswordEncoder"/>

  <bean id="customAuthenticationProvider" class="com.onedeveloperstudio.core.server.security.CustomAuthenticationProvider">
    <property name="userDetailsService" ref="userDetailsService"/>
    <property name="passwordEncoder" ref="passwordEncoder"/>
    <property name="saltSource" ref="saltSource"/>
  </bean>

  <bean id="authenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
    <property name="userDetailsService" ref="userDetailsService"/>
    <property name="passwordEncoder" ref="passwordEncoder"/>
    <property name="saltSource" ref="saltSource"/>
  </bean>

  <s:authentication-manager>
    <s:authentication-provider ref="customAuthenticationProvider"/>
  </s:authentication-manager>
</beans>
