apply plugin: 'war'
apply plugin: 'jetty'

war {
  archiveName="jobSkills.war"
}

def apacheTilesVersion = '2.2.2'

dependencies {
  compile project(':jobskills')

  compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.5' // simple logging facade
  compile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.5' // log4j

//	compile group: 'org.slf4j', name: 'jul-to-slf4j', version: '1.7.5'
	compile group: 'org.slf4j', name: 'jcl-over-slf4j', version: '1.7.5'

  compile group: 'org.springframework', name: 'spring-web', version: rootProject.ext.springSecurityVersion
  compile group: 'org.springframework', name: 'spring-webmvc', version: rootProject.ext.springSecurityVersion

  compile group: 'commons-fileupload', name: 'commons-fileupload', version: '1.2.2'
  compile group: 'com.ckeditor', name: 'ckeditor-java-core', version: '3.5.3'

  // apache tiles
  compile group: 'org.apache.tiles', name: 'tiles-core', version: apacheTilesVersion
  compile group: 'org.apache.tiles', name: 'tiles-api', version: apacheTilesVersion
  compile group: 'org.apache.tiles', name: 'tiles-jsp', version: apacheTilesVersion
  compile group: 'org.apache.tiles', name: 'tiles-servlet', version: apacheTilesVersion
  compile group: 'org.apache.tiles', name: 'tiles-template', version: apacheTilesVersion
  compile group: 'org.apache.tiles', name: 'tiles-autotag-core', version: '1.1.0'

  // включаем все файлы настроек в classpath
  runtime files(rootProject.getProjectDir().getPath() + '/conf/')
}

jettyRun {
  httpPort = 8080
  stopPort = 8086
  stopKey = "stopKey"
  webAppSourceDirectory = new File("serverApp/src/main/webapp/")
  contextPath = "/"
}

jettyStop {
  stopPort = 8086
  stopKey = "stopKey"
}